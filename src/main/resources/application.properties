spring.application.name=image_management_auth_service
server.port=${AUTH_SERVICE_PORT:8081}

spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/image_mngt_auth_service}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:1234}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.generate-ddl=true

spring.servlet.multipart.max-file-size=1000MB
spring.servlet.multipart.max-request-size=1000MB

spring.security.oauth2.client.registration.google.client-id=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_ID:1017511821870-n0u5m73hla6pdduv6vna856pubpqcsk8.apps.googleusercontent.com}
spring.security.oauth2.client.registration.google.client-secret=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENT_SECRET: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}
spring.security.oauth2.client.registration.google.scope=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_SCOPE:profile,email}
spring.security.oauth2.client.registration.google.redirect-uri=${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_REDIRECT_URI:http://localhost:8080/oauth2/callback}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.google.authorization-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_AUTHORIZATION_URI:https://accounts.google.com/o/oauth2/auth}
spring.security.oauth2.client.provider.google.token-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_TOKEN_URI:https://oauth2.googleapis.com/token}
spring.security.oauth2.client.provider.google.user-info-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_USER_INFO_URI:https://www.googleapis.com/oauth2/v3/userinfo}
spring.security.oauth2.client.provider.google.jwk-set-uri=${SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_GOOGLE_JWK_SET_URI:https://www.googleapis.com/oauth2/v3/certs}

jwt.secret=${JWT_SECRET:dfsdgdfhftghrt@##$!@#$%^&*()_+1234567890}
jwt.expiration=${JWT_EXPIRATION:86400}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:864000}

spring.task.scheduling.pool.size=10

logging.level.org.springframework.security=TRACE
